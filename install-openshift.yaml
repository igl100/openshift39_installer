---
- name: Create hosts for OpenShift Openshift@Ops{{ ':' }} Masters, Infras, Glusters and a Nodes
  hosts: localhost
  connection: connection
  gather_facts: False
  vars_files:
     - settings/authentications
     - settings/defaults
  tasks:
### VARIABLES SETUP
     - name: Setting Variables
       include: ./commons.yaml
       tags:
          - always

     - name: Defining OpenShift's Master{{ ':' }} {{ prefix_id }}-master
       set_fact: openshift_master="{{ prefix_id }}-master"
       tags:
          - always

     - name: Defining OpenShift's Infra{{ ':' }} {{ prefix_id }}-infra
       set_fact: openshift_infra="{{ prefix_id }}-infra"
       tags:
          - always

     - name: Defining OpenShift's Node{{ ':' }} {{ prefix_id }}-node
       set_fact: openshift_node="{{ prefix_id }}-node"
       tags:
          - always

#     - name: Defining OpenShift's Guster{{ ':' }} {{ prefix_id }}-gluster
#       set_fact: openshift_gluster="{{ prefix_id }}-gluster"
#       tags:
#          - always

     - name: Defining OpenShift's Masters Balancer {{ ':' }} {{ prefix_id }}-mlb
       set_fact: openshift_masters_lb="{{ prefix_id }}-mlb"
       tags:
          - always

     - name: Defining OpenShift's Routers Balancer {{ ':' }} {{ prefix_id }}-rlb
       set_fact: openshift_routers_lb="{{ prefix_id }}-rlb"
       tags:
          - always

### GENERATING VIRTUAL MACHINES SERVICES ----- IF YOU WANT TO CHANGE FORM GCLOUD TO ANTOHER PROVIDER, 
### SUPPLY YOUR OWN PROVIDER TASK FILES TO CREATE INSTANCES
### THE FILES THAT SHOULD BE REPLACED ARE: 
###          (create-master-nodes.yaml, create-infra-nodes.yaml, create-gluster-nodes.yaml, create-nodes.yaml)

### CREATE MASTER NODES
     - name: Creating masters
       include: ./create-master-nodes.yaml counter={{item}}
       with_sequence: count={{ master_nodes }}
       tags:
          - create_servers
          - generating_inventory

### CREATE INFRA NODES
     - name: Creating infra
       include: ./create-infra-nodes.yaml counter={{item}}
       with_sequence: count={{ infra_nodes }}
       tags:
          - create_servers
          - generating_inventory

### CREATE GLUSTER NODES
#     - name: Creating gluster
#       include: ./create-gluster-nodes.yaml counter={{item}}
#       with_sequence: count={{ gluster_nodes }}
#       tags:
#          - create_servers
#          - generating_inventory

### CREATE NODES
     - name: Creating nodes
       include: ./create-nodes.yaml counter={{item}}
       with_sequence: count={{ process_nodes }}
       tags:
          - create_servers
          - generating_inventory

### CREATE MASTERS LOAD BALANCER
#     - name: Creating masters load balancer
#       include: ./create-masters-lb.yaml counter={{item}}
#       with_sequence: count={{ masters_balancers }}
#       tags:
#          - create_servers
#          - generating_inventory

### CREATE ROUTES BALANCERS
     - name: Creating router load balancer
       include: ./create-routers-lb.yaml counter={{item}}
       with_sequence: count={{ routers_balancers }}
       tags:
          - create_servers
          - generating_inventory

### CREATE DNS CONFIGS
     - name: Creating DNS configurations
       include: ./create-dns.yaml
       tags:
          - create_dns

### CREATE INVENTORY FILE
     - name: Deleting old hosts file
       file:
          path: "./tmp/hosts"
          state: absent
       ignore_errors: True
       tags: 
          - generating_inventory

     - name: Retriving Installer host
       set_fact: headnodes={{ groups[['openshift_master_group'][0]] }}
       tags:
          - generating_inventory

     - name: Selecting first master as main installer
       add_host: groups=openshift_headnode_group hostname={{ headnodes[0] }}
                 ansible_user={{ ssh_default_image_user }} ansible_password={{ ssh_default_image_password }}
                 ansible_port={{ ssh_default_image_port }}
       tags:
          - generating_inventory

     - name: Copying Openshift file template
       template:
          src: "./templates/inventory_hosts.j2"
          dest: "./tmp/hosts"
       tags:
          - generating_inventory

### DELETING OLD KEYS
- name: Setting up keys
  hosts: all
  gather_facts: False
  tasks:
      - name: Searching for keys
        find:
           paths: /root/.ssh/
        register: keys_to_delete
        tags: 
           - ssh

      - name: Deleting old keys
        file:
           path: "{{ item.path }}"
           state: absent
        with_items: "{{ keys_to_delete.files }}"
        tags: 
           - ssh

      - name: Generate keys for All Servers
        command: "ssh-keygen -b 4096 -t rsa -f /root/.ssh/id_rsa -q -N \"\""
        tags:
           - ssh

### SETTING UP KEYS
- name: Setting up keys for master_group
  hosts: openshift_master_group
  gather_facts: False
  tasks:
      - name: Reading Masters keys
        shell: cat ~/.ssh/id_rsa.pub
        register: ssh_keys
        tags:
           - authorized_keys

- name: Saving keys inventory 
  hosts: localhost
  gather_facts: False
  tasks:
      - name: Deleting old local keys inventory
        file:
           path: "./tmp/authorized_keys"
           state: absent
        tags: 
           - authorized_keys

      - name: Retriving Masters hosts
        set_fact: masters_hosts={{ groups[['openshift_master_group'][0]] }}
        tags:
           - authorized_keys

      - name: Writing keys to authorized_keys
        lineinfile:
                 path: "./tmp/authorized_keys"
                 create: yes
                 line: "{{hostvars[item]['ssh_keys']['stdout'] }}"
        with_items:
                  - "{{ groups[['openshift_master_group'][0]] }}" 
        tags:
           - authorized_keys

- name: Distributing masters keys
  hosts: all
  gather_facts: False
  tasks:
      - name: Deploy masters keys to all servers
        copy:
           src="./tmp/authorized_keys"
           dest="/root/.ssh/authorized_keys"
        tags:
           - authorized_keys

###" Changing ssh known_hosts question avoidance
- name: Setting up ssh for automatic connection
  hosts: all
  gather_facts: False
  tasks:
      - name: Changeing ssh_config file
        lineinfile: 
                 line: "StrictHostKeyChecking no\nUserKnownHostsFile /dev/null\nLogLevel QUIET"
                 path: /etc/ssh/ssh_config
        tags:
           - ssh_config

      - name: Restarting sshd service
        service: name=sshd state=restarted
        tags:
           - ssh_config

## Uploading repo config
- name: Updating servers
  hosts: all
  vars_files:
     - settings/authentications
     - settings/defaults
  gather_facts: False
  tasks:
      - name: Copying Openshift file template
        template:
           src: "./templates/openshift.repo.j2"
           dest: "/etc/yum.repos.d/openshift.repo"
           owner: root
           group: root
           mode: "u=rw,g=r,o=r"
        tags:
           - prepare

### "Starting docker install
- name: Preparing all hosts packages
  hosts: openshift_master_group,openshift_node_group,openshift_infra_group
  gather_facts: False
  vars:
     docker_device: /dev/sdb
     docker_device_partition: "{{ docker_device }}1"
     prereqs_packages:
       - vim
       - wget
       - git
       - net-tools
       - bind-utils
       - atomic-openshift-excluder
       - atomic-openshift-docker-excluder
       - iptables-services
       - bridge-utils
       - bash-completion
       - kexec-tools 
       - sos 
       - psacct
       - docker
       - httpd-tools
       - atomic-openshift-utils
  tasks:
      - name: Installing Basic Applications
        yum: name={{ item }} state=present
        with_items: "{{ prereqs_packages }}"
        tags:
           - prepare
           - package_install

## Hosts update
- name: Updating servers
  hosts: all
  vars_files:
     - settings/authentications
     - settings/defaults
  gather_facts: False
  tasks:
      - name: Updating the entire host
        yum: name="*" state=latest
        tags:
           - prepare
           - host_update

### Uploading Ansible Config File
- name: Uploading Ansible Config File
  hosts: openshift_headnode_group
  gather_facts: False
  tasks:
      - name: Uploading ansible config file
        copy:
           src="./templates/ansible.cfg"
           dest="/etc/ansible/ansible.cfg"
        tags:
           - authorized_keys

### "Starting docker install
- name: Preparing all hosts and installing Docker
  hosts: openshift_master_group,openshift_node_group,openshift_infra_group
  gather_facts: False
  vars:
     docker_device: /dev/sdb
     docker_device_partition: "{{ docker_device }}1"
  tasks:
      - name: Create a partition for Docker
        command: parted {{ docker_device }} --script 'mklabel msdos mkpart primary 0% 100%'
        tags:
           - prepare
           - docker_install

      - name: Create a VG named docker-vg (used for Docker)
        lvg: vg=docker-vg pvs={{ docker_device_partition }}
        tags:
           - prepare
           - docker_install

      - name: Configuring Docker-Storage-Setup first
        lineinfile: dest=/etc/sysconfig/docker-storage-setup line="VG=docker-vg"
        tags:
           - prepare
           - docker_install

      - name: Run a Docker-Storage-Setup
        command: /usr/bin/docker-storage-setup
        tags:
           - prepare
           - docker_install

      - name: Execute a Atomic OpenShift Excluder
        command: atomic-openshift-excluder unexclude
        tags:
           - prepare
           - docker_install

      - name: Initiating Docker Service
        service: name=docker state=started
        tags:
           - prepare
           - docker_install

      - name: Enabling Docker Service
        service: name=docker enabled=yes
        tags:
           - prepare
           - docker_install

      - name: Execute a Atomic OpenShift Excluder
        command: atomic-openshift-excluder unexclude
        tags:
           - prepare
           - docker_install

      - name: Setting Docker configuration with with the correct info
        lineinfile: dest=/etc/sysconfig/docker regexp="OPTIONS=.*" line="OPTIONS=\"--selinux-enabled --insecure-registry 172.30.0.0/16  --log-driver=journald\""
        tags:
           - prepare
           - docker_install

#Changing firewalld to iptables
- name: Changing firewalld to iptables
  hosts: all
  gather_facts: False
  tasks:
      - name: Installing iptables-services
        yum:
          name: iptables-services
          state: latest
        tags:
           - iptables

      - name: Disabling firewalld services
        systemd:
          masked: yes
          name: firewalld
          state: stopped
        tags:
           - iptables

      - name: Running iptables service
        systemd:
          name: iptables
          enabled: yes
          state: started
        tags:
           - iptables

      - name: Running ip6tables service
        systemd:
          name: ip6tables
          enabled: yes
          state: started
        tags:
           - iptables

### CONFIGURING HAPROXY FOR ROUTERS
- name: Creating and configuring haproxy router balancer.
  hosts: openshift_router_lb_group
  gather_facts: False
  tasks:
       - name: Configuring Haproxy
         include: ./configure-haproxy.yaml
         tags:
            - openshift_routers_lb

### CREATING OPENSHIFT CONFIGURATION FILE
- name: Creating Openshift inventory config file
  hosts: openshift_master_group
  gather_facts: False
  vars_files:
     - settings/authentications
     - settings/defaults
  tasks:
      - name: Copying Openshift file template
        template:
           src: "./templates/openshift_hosts.j2"
           dest: "/etc/ansible/hosts"
           owner: root
           group: root
           mode: "u=rw,g=r,o=r"
        tags:
           - openshift_inventory

### CREATING HTPASSWD FILES
- name: Setting up htpasswd
  hosts: openshift_master_group,openshift_headnode_group
  tasks:
      - name: Deleting old htpasswd configuration
        file:
           path: "/etc/openshift-passwords"
           state: absent
        tags: 
           - openshift_users

      - name: Creating second user
        shell: "htpasswd -b -c /etc/openshift-passwords dv r3dh4t1!"
        tags:
           - openshift_users

- name: Install OpenShift
  hosts: openshift_headnode_group
  gather_facts: False
  vars_files:
     - settings/authentications
     - settings/defaults
  tasks:
      - name: Running openshift prereqs playbook
        command: "ansible-playbook -i /etc/ansible/hosts -e openshift_disable_check=disk_availability,memory_availability /usr/share/ansible/openshift-ansible/playbooks/prerequisites.yml"
        tags:
           - install_openshift

      - name: Running openshift install cluster playbook
        command: "ansible-playbook -i /etc/ansible/hosts -e openshift_disable_check=disk_availability,memory_availability /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml"
        tags:
           - install_openshift
#      - name: Start Openshift Installation
#        debug:
#            msg: 
#              - 'Please start Openshift Installation' 
#              - 'Access {{ headnodes[0] }} (ssh root@{{ headnodes[0] }}) and run:' 
#              - 'ansible-playbook -i /etc/ansible/hosts /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml -e openshift_disable_check=disk_availability,memory_availability'
#              - ' '
#              - 'When installation finishes, you can continue this playbook by pressing ctrl + C then C.' 
#              - 'If you want to finish this playbook later, run: '
#              - 'ansible-playbook install-openshift.yaml -i ./tmp/hosts --tags "selecting_headnode,openshift_postinstall,containers_setup"'
#        tags:
#           - install_openshift

#      - name: Waiting for installation to end...
#        pause:
#            minutes: 70
#        tags:
#           - install_openshift

- name: OpenShift Post Install Configuration
  hosts: openshift_master_group,openshift_headnode_group
  gather_facts: False
  tasks:
      - name: Changing authorization provider
        replace:
              path: "/etc/origin/master/master-config.yaml"
              regexp: "DenyAllPasswordIdentityProvider"
              replace: "HTPasswdPasswordIdentityProvider\n      file: /etc/openshift-passwords"
              backup: yes
        tags:
           - openshift_postinstall

      - name: Restarting master SERVICES
        service: name=atomic-openshift-master-api state=restarted
        tags:
           - openshift_postinstall

      - name: Restarting master services
        service: name=atomic-openshift-master-controllers state=restarted
        tags:
           - openshift_postinstall

- name: Adding development containers
  hosts: openshift_headnode_group
  gather_facts: False
  tasks:
#      - name: Setting GlusterFS storage class as defaults
#        command: "oc patch storageclass glusterfs-storage -p \'{\"metadata\": {\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"}}}\'"
#        tags:
#           - containers_setup

      - name: Deleting Dev Environment If exists
        command: "oc delete project dev"
        ignore_errors: True
        tags:
           - containers_setup

      - name: Deleting Stage Environment If exists
        command: "oc delete project stage"
        ignore_errors: True
        tags:
           - containers_setup

      - name: Deleting CICD Environment If exists
        command: "oc delete project cicd"
        ignore_errors: True
        tags:
           - containers_setup

      - name: Creating Dev Environment
        command: "oc new-project dev --display-name=\"Tasks - Dev\""
        ignore_errors: True
        tags:
           - containers_setup

      - name: Creating Stage Environment
        command: "oc new-project stage --display-name=\"Tasks - Stage\""
        ignore_errors: True
        tags:
           - containers_setup

      - name: Creating CICD Environment
        command: "oc new-project cicd --display-name=\"CI/CD\""
        ignore_errors: True
        tags:
           - containers_setup

      - name: Copying Yaml CICD template File
        copy:
           src="./templates/cicdTemplate.j2"
           dest="/root/cicd-template.yaml"
        ignore_errors: True
        tags:
           - containers_setup

      - name: Adding jenkins user to Dev
        command: "oc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n dev"
        tags:
           - containers_setup

      - name: Adding jenkins user to Stage
        command: "oc policy add-role-to-user edit system:serviceaccount:cicd:jenkins -n stage"
        tags:
           - containers_setup

      - name: Adding DV user to dev
        command: "oadm policy add-role-to-user admin dv -n dev"
        tags:
           - containers_setup

      - name: Adding anyuid to all users for running root containers
        command: "oc adm policy add-scc-to-group anyuid system:authenticated"
        tags:
           - containers_setup

      - name: Adding DV user to Stage
        command: "oadm policy add-role-to-user admin dv -n stage"
        tags:
           - containers_setup

      - name: Adding DV user to CICD
        command: "oadm policy add-role-to-user admin dv -n cicd"
        tags:
           - containers_setup

      - name: Adding DV user to default
        command: "oadm policy add-role-to-user admin dv -n default"
        tags:
           - containers_setup

      - name: Adding DV user to logging
        command: "oadm policy add-role-to-user admin dv -n logging"
        tags:
           - containers_setup

      - name: Uploading Yaml File
        command: "oc create -f /root/cicd-template.yaml -n cicd"
        tags:
           - containers_setup

      - name: Running Yaml File
        command: "oc new-app cicd -n cicd"
        tags:
           - containers_setup
